一个token包含三部分：
header.claims.signature
为了安全的在url中使用，所有部分都base64 URL-safe进行编码处理

Header头部分
头部分简单声明了类型(JWT)以及产生签名所使用的算法。
{
  "alg" : "AES256",
  "typ" : "JWT"
}

Claims声明
声明部分是整个token的核心，表示要发送的用户详细信息。有些情况下，我们很可能要在一个服务器上实现认证，然后访问另一台服务器上的资源；或者，通过单独的接口来生成token，token被保存在应用程序客户端（比如浏览器）使用。 
一个简单的声明（claim）的例子：
{
  "sub": "1234567890",
  "name": "John Doe",
  "admin": true
}

Signature签名
签名的目的是为了保证上边两部分信息不被篡改。如果尝试使用Bas64对解码后的token进行修改，签名信息就会失效。一般使用一个私钥（private key）通过特定算法对Header和Claims进行混淆产生签名信息，所以只有原始的token才能于签名信息匹配。
这里有一个重要的实现细节。只有获取了私钥的应用程序（比如服务器端应用）才能完全认证token包含声明信息的合法性。所以，永远不要把私钥信息放在客户端（比如浏览器）。


